import React, { useState } from 'react';
import MenuList from './MenuList';
import DishForm from './DishForm';

interface Dish {
    name: string;
    description: string;
    course: string;
    price: number;
}

const App: React.FC = () => {
    const [dishes, setDishes] = useState<Dish[]>([]);

    const addDish = (dish: Dish) => {
        setDishes([...dishes, dish]);
    };

    return (
        <div>
            <h1>Private Chef Menu Management</h1>
            <DishForm addDish={addDish} />
            <MenuList dishes={dishes} />
            <p>Total number of menu items: {dishes.length}</p>
        </div>
    );
};

export default App;

import React, { useState } from 'react';

interface DishFormProps {
    addDish: (dish: { name: string; description: string; course: string; price: number }) => void;
}

const DishForm: React.FC<DishFormProps> = ({ addDish }) => {
    const [name, setName] = useState('');
    const [description, setDescription] = useState('');
    const [course, setCourse] = useState('Starters');
    const [price, setPrice] = useState(0);

    const handleSubmit = (e: React.FormEvent) => {
        e.preventDefault();
        addDish({ name, description, course, price });
        setName('');
        setDescription('');
        setCourse('Starters');
        setPrice(0);
    };

    return (
        <form onSubmit={handleSubmit}>
            <div>
                <label>Dish Name:</label>
                <input type="text" value={name} onChange={(e) => setName(e.target.value)} required />
            </div>
            <div>
                <label>Description:</label>
                <input type="text" value={description} onChange={(e) => setDescription(e.target.value)} required />
            </div>
            <div>
                <label>Course:</label>
                <select value={course} onChange={(e) => setCourse(e.target.value)}>
                    <option value="Starters">Starters</option>
                    <option value="Mains">Mains</option>
                    <option value="Desserts">Desserts</option>
                </select>
            </div>
            <div>
                <label>Price:</label>
                <input type="number" value={price} onChange={(e) => setPrice(Number(e.target.value))} required />
            </div>
            <button type="submit">Add Dish</button>
        </form>
    );
};

export default DishForm;


interface MenuListProps {
    dishes: { name: string; description: string; course: string; price: number }[];
}

const MenuList: React.FC<MenuListProps> = ({ dishes }) => {
    return (
        <div>
            <h2>Prepared Menu</h2>
            <ul>
                {dishes.map((dish, index) => (
                    <li key={index}>
                        <strong>{dish.name}</strong> - {dish.description} ({dish.course}) - ${dish.price.toFixed(2)}
                    </li>
                ))}
            </ul>
        </div>
    );
};

export default MenuList;
